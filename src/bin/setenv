#!/bin/bash
#===================================================================================================
#
# 共通設定
#
# 前提:
#   - DIR_BASE が定義されていること
#
#===================================================================================================
#---------------------------------------------------------------------------------------------------
# 絶対定数
#---------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# 終了コード
#-------------------------------------------------------------------------------
readonly EXITCODE_SUCCESS=0
readonly EXITCODE_WARN=3
readonly EXITCODE_ERROR=6

#-------------------------------------------------------------------------------
# ログレベル
#-------------------------------------------------------------------------------
readonly LOGLEVEL_TRACE="TRACE"
readonly LOGLEVEL_DEBUG="DEBUG"
readonly LOGLEVEL_INFO="INFO "
readonly LOGLEVEL_WARN="WARN "
readonly LOGLEVEL_ERROR="ERROR"


#---------------------------------------------------------------------------------------------------
# 前提チェック
#---------------------------------------------------------------------------------------------------
# 環境変数
if [[ "${DIR_BASE}x" = "x" ]]; then
  echo "DIR_BASE が定義されていません。" >&2
  exit 1
fi


#---------------------------------------------------------------------------------------------------
# 相対定数
#---------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# ディレクトリ
#-------------------------------------------------------------------------------
# 実行スクリプト
readonly DIR_BIN="${DIR_BASE}/bin"
# スクリプトライブラリ
readonly DIR_BIN_LIB="${DIR_BIN}/lib"
# 設定
readonly DIR_CONFIG="${DIR_BASE}/config"
# ログ
readonly DIR_LOG="${DIR_BASE}/log"
# ダウンロードアーカイブ
readonly DIR_ARCHIVE="${DIR_BASE}/archive"
# 外部ライブラリ
readonly DIR_LIB="${DIR_BASE}/lib"
# 外部モジュール
readonly DIR_MODULE="${DIR_BASE}/module"
# 内部データ
readonly DIR_DATA="${DIR_BASE}/data"

# swagger-codegen-cli
readonly PATH_CODEGEN_CLI="${DIR_LIB}/swagger-codegen-cli.jar"
# groovy
readonly DIR_GROOVY="${DIR_LIB}/groovy"

# jetty
readonly DIR_JETTY="${DIR_MODULE}/jetty"
# swagger-editor
readonly DIR_EDITOR="${DIR_MODULE}/swagger-editor"
# swagger-ui
readonly DIR_UI="${DIR_MODULE}/swagger-ui"
# swagger-generator
readonly DIR_GENERATOR="${DIR_MODULE}/swagger-generator"
# swagger-validator
readonly DIR_VALIDATOR="${DIR_MODULE}/swagger-validator"
# swagger-spec-mgr
readonly DIR_SPEC_MGR="${DIR_MODULE}/swagger-spec-mgr"

#-------------------------------------------------------------------------------
# ファイル
#-------------------------------------------------------------------------------
# プロセスファイル
readonly PATH_PID="${DIR_DATA}/pid"
# プロジェクト毎の上書き設定ファイル
readonly PATH_PROJECT_ENV="${DIR_CONFIG}/project.properties"


#--------------------------------------------------------------------------------------------------
# 共通関数読込み
#--------------------------------------------------------------------------------------------------
. "${DIR_BIN_LIB}/common_utils.sh"


#--------------------------------------------------------------------------------------------------
# OS依存設定
#--------------------------------------------------------------------------------------------------
# mac
if [ "$(is_mac)" = "true" ]; then
  JAVA_HOME="$(/usr/libexec/java_home)"
  _JAVA_OPTIONS="-Dfile.encoding=UTF-8"
  export JAVA_HOME
  export _JAVA_OPTIONS
fi

# linux
#if [ $(is_linux) = "true" ]; then
#fi

# cygwin
#if [ $(is_cygwin) = "true" ]; then
#fi


#--------------------------------------------------------------------------------------------------
# プロジェクト毎の上書き設定読込み
#--------------------------------------------------------------------------------------------------
if [ -f "${PATH_PROJECT_ENV}" ]; then
  . "${PATH_PROJECT_ENV}"
else
  echo "ERROR ${PATH_PROJECT_ENV} が存在しません。デプロイ結果が正しいか確認して下さい。" >&2
  exit ${EXITCODE_ERROR}
fi


#--------------------------------------------------------------------------------------------------
# 設定値ルールの反映
#--------------------------------------------------------------------------------------------------
# spec-mgr起動ポート
export SPECMGR_PORT=$((${SERVER_PORT} + 1))
